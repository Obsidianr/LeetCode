  public static double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int len = nums1.length+nums2.length;
        int mid = (len+1)/2;
        if (nums1.length==0||nums2.length==0){
            if (nums1.length==0){
                if (len%2==0) return (nums2[mid-1]+nums2[mid])/2.0;
                else return nums2[mid-1];
            }else {
                if (len%2==0) return (nums1[mid-1]+nums1[mid])/2.0;
                else return nums1[mid-1];
            }

        }

        int index1=0,index2=0;
        int m=0,n=0;
        for (int i = 0;i<=mid;i++){
            if (n==nums1.length){
                index2 = index1;
                index1 = nums2[m];
                m++;
            }
            else if(m==nums2.length){
                index2 = index1;
                index1 = nums1[n];
                n++;
            }
            else if (n!=nums1.length&&nums1[n]>nums2[m]){
                index2 = index1;
                index1 = nums2[m];
                m++;
            }
            else if(m!=nums2.length&&nums1[n]<=nums2[m]){
                index2 = index1;
                index1 = nums1[n];
                n++;
            }
        }
        if(len%2==0) return (index1+index2)/2.0;
        else return index2;
    }
