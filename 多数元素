题目描述：
给定一个大小为 n 的数组，找到其中的多数元素。多数元素是指在数组中出现次数大于 ⌊ n/2 ⌋ ：的元素。
你可以假设数组是非空的，并且给定的数组总是存在多数元素。
示例 1:
输入: [3,2,3]
输出: 3

示例 2:
输入: [2,2,1,1,1,2,2]
输出: 2

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/majority-element
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 
 /*
    用Hash表
        键记录数组中的数字，值记录出现的次数。
        时间复杂度O(n)，空间复杂度O(n)
 */
 public int majorityElement(int[] nums) {
        int mid = nums.length/2;
        Map<Integer,Integer> map = new HashMap<>();
        for(int i = 0;i<nums.length;i++){    //记录键值
            if(map.containsKey(nums[i])) {   //已有键，值++
                int a = map.get(nums[i]);
                map.put(nums[i],++a);
            }
            else{
                map.put(nums[i],1);   //创建新键
            }
        }
       for(Map.Entry<Integer,Integer> a:map.entrySet()){   //找出多数元素
           if(a.getValue()>mid) return a.getKey();
       }
       return 0;
    }
    
    /*******************************************************************************/
